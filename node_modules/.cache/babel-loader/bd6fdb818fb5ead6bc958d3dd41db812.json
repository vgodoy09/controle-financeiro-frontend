{"remainingRequest":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_store/users.module.js","dependencies":[{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_store/users.module.js","mtime":1543931740830},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/.babelrc","mtime":1544005331407},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1543927896071},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1543927899826},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js","mtime":1530808242000},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js","mtime":1543927896984}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.users = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _services = require('../_services');\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar state = {\n    all: {}\n};\n\nvar actions = {\n    getAll: function getAll(_ref) {\n        var commit = _ref.commit;\n\n        commit('getAllRequest');\n\n        _services.userService.getAll().then(function (users) {\n            return commit('getAllSuccess', users);\n        }, function (error) {\n            return commit('getAllFailure', error);\n        });\n    },\n    delete: function _delete(_ref2, id) {\n        var commit = _ref2.commit;\n\n        commit('deleteRequest', id);\n\n        _services.userService.delete(id).then(function (user) {\n            return commit('deleteSuccess', id);\n        }, function (error) {\n            return commit('deleteSuccess', { id: id, error: error.toString() });\n        });\n    }\n};\n\nvar mutations = {\n    getAllRequest: function getAllRequest(state) {\n        state.all = { loading: true };\n    },\n    getAllSuccess: function getAllSuccess(state, users) {\n        state.all = { items: users };\n    },\n    getAllFailure: function getAllFailure(state, error) {\n        state.all = { error: error };\n    },\n    deleteRequest: function deleteRequest(state, id) {\n        // add 'deleting:true' property to user being deleted\n        state.all.items = state.all.items.map(function (user) {\n            return user.id === id ? _extends({}, user, { deleting: true }) : user;\n        });\n    },\n    deleteSuccess: function deleteSuccess(state, id) {\n        // remove deleted user from state\n        state.all.items = state.all.items.filter(function (user) {\n            return user.id !== id;\n        });\n    },\n    deleteFailure: function deleteFailure(state, _ref3) {\n        var id = _ref3.id,\n            error = _ref3.error;\n\n        // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n        state.all.items = state.items.map(function (user) {\n            if (user.id === id) {\n                // make copy of user without 'deleting:true' property\n                var deleting = user.deleting,\n                    userCopy = _objectWithoutProperties(user, ['deleting']);\n                // return copy of user with 'deleteError:[error]' property\n\n\n                return _extends({}, userCopy, { deleteError: error });\n            }\n\n            return user;\n        });\n    }\n};\n\nvar users = exports.users = {\n    namespaced: true,\n    state: state,\n    actions: actions,\n    mutations: mutations\n};",{"version":3,"sources":["src/_store/users.module.js"],"names":["state","all","actions","getAll","commit","userService","then","users","error","delete","id","toString","mutations","getAllRequest","loading","getAllSuccess","items","getAllFailure","deleteRequest","map","user","deleting","deleteSuccess","filter","deleteFailure","userCopy","deleteError","namespaced"],"mappings":";;;;;;;;;AAAA;;;;AAEA,IAAMA,QAAQ;AACVC,SAAK;AADK,CAAd;;AAIA,IAAMC,UAAU;AACZC,UADY,wBACO;AAAA,YAAVC,MAAU,QAAVA,MAAU;;AACfA,eAAO,eAAP;;AAEAC,8BAAYF,MAAZ,GACKG,IADL,CAEQ;AAAA,mBAASF,OAAO,eAAP,EAAwBG,KAAxB,CAAT;AAAA,SAFR,EAGQ;AAAA,mBAASH,OAAO,eAAP,EAAwBI,KAAxB,CAAT;AAAA,SAHR;AAKH,KATW;AAWZC,UAXY,0BAWOC,EAXP,EAWW;AAAA,YAAdN,MAAc,SAAdA,MAAc;;AACnBA,eAAO,eAAP,EAAwBM,EAAxB;;AAEAL,8BAAYI,MAAZ,CAAmBC,EAAnB,EACKJ,IADL,CAEQ;AAAA,mBAAQF,OAAO,eAAP,EAAwBM,EAAxB,CAAR;AAAA,SAFR,EAGQ;AAAA,mBAASN,OAAO,eAAP,EAAwB,EAAEM,MAAF,EAAMF,OAAOA,MAAMG,QAAN,EAAb,EAAxB,CAAT;AAAA,SAHR;AAKH;AAnBW,CAAhB;;AAsBA,IAAMC,YAAY;AACdC,iBADc,yBACAb,KADA,EACO;AACjBA,cAAMC,GAAN,GAAY,EAAEa,SAAS,IAAX,EAAZ;AACH,KAHa;AAIdC,iBAJc,yBAIAf,KAJA,EAIOO,KAJP,EAIc;AACxBP,cAAMC,GAAN,GAAY,EAAEe,OAAOT,KAAT,EAAZ;AACH,KANa;AAOdU,iBAPc,yBAOAjB,KAPA,EAOOQ,KAPP,EAOc;AACxBR,cAAMC,GAAN,GAAY,EAAEO,YAAF,EAAZ;AACH,KATa;AAUdU,iBAVc,yBAUAlB,KAVA,EAUOU,EAVP,EAUW;AACrB;AACAV,cAAMC,GAAN,CAAUe,KAAV,GAAkBhB,MAAMC,GAAN,CAAUe,KAAV,CAAgBG,GAAhB,CAAoB;AAAA,mBAClCC,KAAKV,EAAL,KAAYA,EAAZ,gBACWU,IADX,IACiBC,UAAU,IAD3B,MAEMD,IAH4B;AAAA,SAApB,CAAlB;AAKH,KAjBa;AAkBdE,iBAlBc,yBAkBAtB,KAlBA,EAkBOU,EAlBP,EAkBW;AACrB;AACAV,cAAMC,GAAN,CAAUe,KAAV,GAAkBhB,MAAMC,GAAN,CAAUe,KAAV,CAAgBO,MAAhB,CAAuB;AAAA,mBAAQH,KAAKV,EAAL,KAAYA,EAApB;AAAA,SAAvB,CAAlB;AACH,KArBa;AAsBdc,iBAtBc,yBAsBAxB,KAtBA,SAsBsB;AAAA,YAAbU,EAAa,SAAbA,EAAa;AAAA,YAATF,KAAS,SAATA,KAAS;;AAChC;AACAR,cAAMC,GAAN,CAAUe,KAAV,GAAkBhB,MAAMgB,KAAN,CAAYG,GAAZ,CAAgB,gBAAQ;AACtC,gBAAIC,KAAKV,EAAL,KAAYA,EAAhB,EAAoB;AAChB;AADgB,oBAERW,QAFQ,GAEkBD,IAFlB,CAERC,QAFQ;AAAA,oBAEKI,QAFL,4BAEkBL,IAFlB;AAGhB;;;AACA,oCAAYK,QAAZ,IAAsBC,aAAalB,KAAnC;AACH;;AAED,mBAAOY,IAAP;AACH,SATiB,CAAlB;AAUH;AAlCa,CAAlB;;AAqCO,IAAMb,wBAAQ;AACjBoB,gBAAY,IADK;AAEjB3B,gBAFiB;AAGjBE,oBAHiB;AAIjBU;AAJiB,CAAd","file":"users.module.js","sourceRoot":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend","sourcesContent":["import { userService } from '../_services';\n\nconst state = {\n    all: {}\n};\n\nconst actions = {\n    getAll({ commit }) {\n        commit('getAllRequest');\n\n        userService.getAll()\n            .then(\n                users => commit('getAllSuccess', users),\n                error => commit('getAllFailure', error)\n            );\n    },\n\n    delete({ commit }, id) {\n        commit('deleteRequest', id);\n\n        userService.delete(id)\n            .then(\n                user => commit('deleteSuccess', id),\n                error => commit('deleteSuccess', { id, error: error.toString() })\n            );\n    }\n};\n\nconst mutations = {\n    getAllRequest(state) {\n        state.all = { loading: true };\n    },\n    getAllSuccess(state, users) {\n        state.all = { items: users };\n    },\n    getAllFailure(state, error) {\n        state.all = { error };\n    },\n    deleteRequest(state, id) {\n        // add 'deleting:true' property to user being deleted\n        state.all.items = state.all.items.map(user =>\n            user.id === id\n                ? { ...user, deleting: true }\n                : user\n        )\n    },\n    deleteSuccess(state, id) {\n        // remove deleted user from state\n        state.all.items = state.all.items.filter(user => user.id !== id)\n    },\n    deleteFailure(state, { id, error }) {\n        // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n        state.all.items = state.items.map(user => {\n            if (user.id === id) {\n                // make copy of user without 'deleting:true' property\n                const { deleting, ...userCopy } = user;\n                // return copy of user with 'deleteError:[error]' property\n                return { ...userCopy, deleteError: error };\n            }\n\n            return user;\n        })\n    }\n};\n\nexport const users = {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n};\n"]}]}