{"remainingRequest":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_store/account.module.js","dependencies":[{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_store/account.module.js","mtime":1543931740829},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/.babelrc","mtime":1544005331407},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1543927896071},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1543927899826},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js","mtime":1530808242000},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js","mtime":1543927896984}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.account = undefined;\n\nvar _services = require('../_services');\n\nvar _helpers = require('../_helpers');\n\nvar user = JSON.parse(localStorage.getItem('user'));\nvar state = user ? { status: { loggedIn: true }, user: user } : { status: {}, user: null };\n\nvar actions = {\n    login: function login(_ref, _ref2) {\n        var dispatch = _ref.dispatch,\n            commit = _ref.commit;\n        var username = _ref2.username,\n            password = _ref2.password;\n\n        commit('loginRequest', { username: username });\n\n        _services.userService.login(username, password).then(function (user) {\n            commit('loginSuccess', user);\n            _helpers.router.push('/');\n        }, function (error) {\n            commit('loginFailure', error);\n            dispatch('alert/error', error, { root: true });\n        });\n    },\n    logout: function logout(_ref3) {\n        var commit = _ref3.commit;\n\n        _services.userService.logout();\n        commit('logout');\n    },\n    register: function register(_ref4, user) {\n        var dispatch = _ref4.dispatch,\n            commit = _ref4.commit;\n\n        commit('registerRequest', user);\n\n        _services.userService.register(user).then(function (user) {\n            commit('registerSuccess', user);\n            _helpers.router.push('/login');\n            setTimeout(function () {\n                // display success message after route change completes\n                dispatch('alert/success', 'Registration successful', { root: true });\n            });\n        }, function (error) {\n            commit('registerFailure', error);\n            dispatch('alert/error', error, { root: true });\n        });\n    }\n};\n\nvar mutations = {\n    loginRequest: function loginRequest(state, user) {\n        state.status = { loggingIn: true };\n        state.user = user;\n    },\n    loginSuccess: function loginSuccess(state, user) {\n        state.status = { loggedIn: true };\n        state.user = user;\n    },\n    loginFailure: function loginFailure(state) {\n        state.status = {};\n        state.user = null;\n    },\n    logout: function logout(state) {\n        state.status = {};\n        state.user = null;\n    },\n    registerRequest: function registerRequest(state, user) {\n        state.status = { registering: true };\n    },\n    registerSuccess: function registerSuccess(state, user) {\n        state.status = {};\n    },\n    registerFailure: function registerFailure(state, error) {\n        state.status = {};\n    }\n};\n\nvar account = exports.account = {\n    namespaced: true,\n    state: state,\n    actions: actions,\n    mutations: mutations\n};",{"version":3,"sources":["src/_store/account.module.js"],"names":["user","JSON","parse","localStorage","getItem","state","status","loggedIn","actions","login","dispatch","commit","username","password","userService","then","router","push","error","root","logout","register","setTimeout","mutations","loginRequest","loggingIn","loginSuccess","loginFailure","registerRequest","registering","registerSuccess","registerFailure","account","namespaced"],"mappings":"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","file":"account.module.js","sourceRoot":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend","sourcesContent":["import { userService } from '../_services';\nimport { router } from '../_helpers';\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst state = user\n    ? { status: { loggedIn: true }, user }\n    : { status: {}, user: null };\n\nconst actions = {\n    login({ dispatch, commit }, { username, password }) {\n        commit('loginRequest', { username });\n    \n        userService.login(username, password)\n            .then(\n                user => {\n                    commit('loginSuccess', user);\n                    router.push('/');\n                },\n                error => {\n                    commit('loginFailure', error);\n                    dispatch('alert/error', error, { root: true });\n                }\n            );\n    },\n    logout({ commit }) {\n        userService.logout();\n        commit('logout');\n    },\n    register({ dispatch, commit }, user) {\n        commit('registerRequest', user);\n    \n        userService.register(user)\n            .then(\n                user => {\n                    commit('registerSuccess', user);\n                    router.push('/login');\n                    setTimeout(() => {\n                        // display success message after route change completes\n                        dispatch('alert/success', 'Registration successful', { root: true });\n                    })\n                },\n                error => {\n                    commit('registerFailure', error);\n                    dispatch('alert/error', error, { root: true });\n                }\n            );\n    }\n};\n\nconst mutations = {\n    loginRequest(state, user) {\n        state.status = { loggingIn: true };\n        state.user = user;\n    },\n    loginSuccess(state, user) {\n        state.status = { loggedIn: true };\n        state.user = user;\n    },\n    loginFailure(state) {\n        state.status = {};\n        state.user = null;\n    },\n    logout(state) {\n        state.status = {};\n        state.user = null;\n    },\n    registerRequest(state, user) {\n        state.status = { registering: true };\n    },\n    registerSuccess(state, user) {\n        state.status = {};\n    },\n    registerFailure(state, error) {\n        state.status = {};\n    }\n};\n\nexport const account = {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n};"]}]}