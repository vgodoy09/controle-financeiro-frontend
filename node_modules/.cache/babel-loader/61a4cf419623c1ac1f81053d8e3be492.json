{"remainingRequest":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_services/user.service.js","dependencies":[{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/src/_services/user.service.js","mtime":1543931740829},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/.babelrc","mtime":1544005331407},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1543927896071},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1543927899826},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/babel-loader/lib/index.js","mtime":1530808242000},{"path":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend/node_modules/eslint-loader/index.js","mtime":1543927896984}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.userService = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _config = require('config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _helpers = require('../_helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar userService = exports.userService = {\n    login: login,\n    logout: logout,\n    register: register,\n    getAll: getAll,\n    getById: getById,\n    update: update,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    var requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username: username, password: password })\n    };\n\n    return fetch(_config2.default.apiUrl + '/users/authenticate', requestOptions).then(handleResponse).then(function (user) {\n        // login successful if there's a jwt token in the response\n        if (user.token) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('user', JSON.stringify(user));\n        }\n\n        return user;\n    });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    var requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(_config2.default.apiUrl + '/users/register', requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n    var requestOptions = {\n        method: 'GET',\n        headers: (0, _helpers.authHeader)()\n    };\n\n    return fetch(_config2.default.apiUrl + '/users', requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    var requestOptions = {\n        method: 'GET',\n        headers: (0, _helpers.authHeader)()\n    };\n\n    return fetch(_config2.default.apiUrl + '/users/' + id, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    var requestOptions = {\n        method: 'PUT',\n        headers: _extends({}, (0, _helpers.authHeader)(), { 'Content-Type': 'application/json' }),\n        body: JSON.stringify(user)\n    };\n\n    return fetch(_config2.default.apiUrl + '/users/' + user.id, requestOptions).then(handleResponse);\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    var requestOptions = {\n        method: 'DELETE',\n        headers: (0, _helpers.authHeader)()\n    };\n\n    return fetch(_config2.default.apiUrl + '/users/' + id, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(function (text) {\n        var data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n\n            var error = data && data.message || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}",{"version":3,"sources":["src/_services/user.service.js"],"names":["userService","login","logout","register","getAll","getById","update","delete","_delete","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","config","apiUrl","then","handleResponse","user","token","localStorage","setItem","removeItem","id","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":"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","file":"user.service.js","sourceRoot":"/home/victor.godoy/projeto-front-end-default/controle-financeiro-frontend","sourcesContent":["import config from 'config';\nimport { authHeader } from '../_helpers';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(handleResponse);\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]}]}